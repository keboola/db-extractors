name: GitHub Actions
on: [ push ]
concurrency: ci-${{ github.ref }} # to avoid tag collisions in the ECR
env:
  # Test image, must be same in the docker-compose.yml if used
  APP_IMAGE: keboola/db-extractor-mysql:latest
  # Developer portal login
  KBC_DEVELOPERPORTAL_VENDOR: "keboola"
  KBC_DEVELOPERPORTAL_APP: "keboola.ex-db-mysql"
  KBC_DEVELOPERPORTAL_USERNAME: "keboola+github_actions_db_extractor_mysql"
  KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
  # DockerHub login
  DOCKERHUB_USER: "keboolabot"
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  # Test KBC project
  KBC_STORAGE_TOKEN: ${{ secrets.KBC_STORAGE_TOKEN }}
  KBC_TEST_PROJECT_URL: "https://connection.keboola.com/admin/projects/2703/dashboard"
  KBC_TEST_PROJECT_CONFIGS: "287537333 287589303 288410371 313935368" # space separated list
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Print Docker version
        run: |
          docker -v
      - name: Build image
        run: docker build -t $APP_IMAGE .
      - name: Login to ECR
        uses: ./.github/actions/ecr-login
      - name: Push image to ECR
        uses: ./.github/actions/push-image

  tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mysql: [latest, 8, 5.6]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to ECR
        uses: ./.github/actions/ecr-login
      - name: Pull image from ECR
        uses: ./.github/actions/pull-image
      - name: Run tests
        run: |
          export MYSQL_VERSION="${{ matrix.mysql }}"
          docker-compose run wait
          docker-compose run app

  tests-in-kbc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Run KBC test jobs
        run: |
          docker pull -q quay.io/keboola/syrup-cli:latest
          export TAG=${GITHUB_REF##*/}
          TASK='
            echo "Running config {} with tag $TAG ..."
            docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job keboola.ex-db-mysql {} $TAG
          '
          parallel --env TAG --halt now,fail=1 "$TASK" ::: $KBC_TEST_PROJECT_CONFIGS
          echo "OK"
  deploy:
    needs:
      - tests
      - tests-in-kbc
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Login to ECR
        uses: ./.github/actions/ecr-login
      - name: Pull image from ECR
        uses: ./.github/actions/pull-image
      - name: Docker login
        run: docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"
      - name: Deploy
        run: ./deploy.sh
