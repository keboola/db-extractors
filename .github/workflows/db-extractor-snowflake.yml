name: Build and Test DB Extractor Snowflake
on:
  workflow_call:
    inputs:
      dockerhub-user:
        type: string
        required: true
      dockerhub-token:
        type: string
        required: true
      tag:
        type: string
        required: true
      is_semantic_tag:
        type: string
        required: true
    secrets:
        KBC_DEVELOPERPORTAL_PASSWORD:
          required: true
        KBC_STORAGE_TOKEN:
          required: true
        SNOWFLAKE_DB_PASSWORD:
          required: true
env:
  # Test image, must be same in the docker-compose.yml if used
  APP_IMAGE: keboola/db-extractor-snowflake
  # Developer portal login
  KBC_DEVELOPERPORTAL_VENDOR: "keboola"
  KBC_DEVELOPERPORTAL_APP: "keboola.ex-db-snowflake"
  KBC_DEVELOPERPORTAL_USERNAME: "keboola+github_actions_db_extractor_snowflake"
  KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}

  KBC_RUNID: 123456
  SNOWFLAKE_DB_DATABASE: "COMPONENT_TESTING"
  SNOWFLAKE_DB_HOST: "kebooladev.snowflakecomputing.com"
  SNOWFLAKE_DB_PORT: 443
  SNOWFLAKE_DB_SCHEMA: "COMPONENT_TEST"
  SNOWFLAKE_DB_USER: "COMPONENT_TESTER"
  SNOWFLAKE_DB_WAREHOUSE: "DEV"
  SNOWFLAKE_DB_PASSWORD: ${{ secrets.SNOWFLAKE_DB_PASSWORD }}

  # Test KBC project
  KBC_STORAGE_TOKEN: ${{ secrets.KBC_STORAGE_TOKEN }}
  KBC_TEST_PROJECT_URL: "https://connection.keboola.com/admin/projects/2703/dashboard"
  KBC_TEST_PROJECT_CONFIGS: "288409174" # space separated list
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: ${{ steps.tag.outputs.app_image_tag }}
      is_semantic_tag: ${{ steps.tag.outputs.is_semantic_tag }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Print Docker version
        run: |
          docker -v
      - name: Docker login
        if: inputs.dockerhub-token
        run: docker login --username "${{ inputs.dockerhub-user }}" --password "${{ inputs.dockerhub-token }}"
      - name: Build image
        run: docker build --target app-db-extractor-snowflake -t $APP_IMAGE .
      - name: Push image to ECR
        uses: keboola/action-push-to-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ inputs.tag }}
          push_latest: ${{ inputs.is_semantic_tag }}
          source_image: ${{ env.APP_IMAGE}}

  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Install latest Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: latest
          legacy: true
      - name: Pull image from ECR
        uses: keboola/action-pull-from-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ inputs.tag }}
          target_image: ${{ env.APP_IMAGE}}
          tag_as_latest: true
      - name: Run tests
        run: docker-compose run --rm app-db-extractor-snowflake composer ci

  tests-in-kbc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run KBC test jobs
        uses: keboola/action-run-configs-parallel@master
        with:
          token: ${{ env.KBC_STORAGE_TOKEN }}
          componentId: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          configs: ${{ env.KBC_TEST_PROJECT_CONFIGS }}

  deploy:
    needs:
      - build
      - tests
      - tests-in-kbc
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/dbExtractorSnowflake') && inputs.is_semantic_tag == 'true'
    steps:
      - name: Set tag in the Deloper Portal
        uses: keboola/action-set-tag-developer-portal@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build.outputs.app_image_tag }}